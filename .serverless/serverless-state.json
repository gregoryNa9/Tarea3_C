{
  "service": {
    "service": "apiproductos",
    "serviceObject": {
      "name": "apiproductos"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs20.x",
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "dynamodb:*"
          ],
          "Resource": [
            "arn:aws:dynamodb:us-east-1:648908580448:table/usuario",
            "arn:aws:dynamodb:us-east-1:648908580448:table/laboratorios",
            "arn:aws:dynamodb:us-east-1:648908580448:table/asignaturas",
            "arn:aws:dynamodb:us-east-1:648908580448:table/parciales",
            "arn:aws:dynamodb:us-east-1:648908580448:table/practicas",
            "arn:aws:dynamodb:us-east-1:648908580448:table/usoEquipo"
          ]
        }
      ],
      "httpApi": {
        "cors": {
          "allowedOrigins": [
            "http://localhost:4200"
          ],
          "allowedMethods": [
            "GET",
            "POST",
            "PUT",
            "DELETE",
            "OPTIONS"
          ],
          "allowedHeaders": [
            "Content-Type"
          ]
        }
      },
      "stage": "dev",
      "region": "us-east-1",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "AgregarUserLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/apiproductos-dev-agregarUser"
            }
          },
          "ObtenerUserLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/apiproductos-dev-obtenerUser"
            }
          },
          "EliminarUserLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/apiproductos-dev-eliminarUser"
            }
          },
          "ActualizarUserLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/apiproductos-dev-actualizarUser"
            }
          },
          "ObtenerTodosUsuariosLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/apiproductos-dev-obtenerTodosUsuarios"
            }
          },
          "AgregarLaboratorioLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/apiproductos-dev-agregarLaboratorio"
            }
          },
          "ObtenerLaboratorioLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/apiproductos-dev-obtenerLaboratorio"
            }
          },
          "EliminarLaboratorioLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/apiproductos-dev-eliminarLaboratorio"
            }
          },
          "ActualizarLaboratorioLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/apiproductos-dev-actualizarLaboratorio"
            }
          },
          "AgregarAsignaturaLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/apiproductos-dev-agregarAsignatura"
            }
          },
          "ObtenerAsignaturaLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/apiproductos-dev-obtenerAsignatura"
            }
          },
          "EliminarAsignaturaLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/apiproductos-dev-eliminarAsignatura"
            }
          },
          "ObtenerAsignaturasPorDocenteLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/apiproductos-dev-obtenerAsignaturasPorDocente"
            }
          },
          "ObtenerAsignaturasPorEstudianteLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/apiproductos-dev-obtenerAsignaturasPorEstudiante"
            }
          },
          "ActualizarAsignaturaLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/apiproductos-dev-actualizarAsignatura"
            }
          },
          "ObtenerTodasAsignaturasLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/apiproductos-dev-obtenerTodasAsignaturas"
            }
          },
          "AgregarParcialLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/apiproductos-dev-agregarParcial"
            }
          },
          "ObtenerTodosParcialesLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/apiproductos-dev-obtenerTodosParciales"
            }
          },
          "EliminarParcialLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/apiproductos-dev-eliminarParcial"
            }
          },
          "ActualizarParcialLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/apiproductos-dev-actualizarParcial"
            }
          },
          "AgregarPracticaLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/apiproductos-dev-agregarPractica"
            }
          },
          "ObtenerPracticasLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/apiproductos-dev-obtenerPracticas"
            }
          },
          "EliminarPracticaLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/apiproductos-dev-eliminarPractica"
            }
          },
          "ActualizarPracticaLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/apiproductos-dev-actualizarPractica"
            }
          },
          "ObtenerPracticasPorDocenteLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/apiproductos-dev-obtenerPracticasPorDocente"
            }
          },
          "AgregarUsoEquipoLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/apiproductos-dev-agregarUsoEquipo"
            }
          },
          "ObtenerUsoEquipoLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/apiproductos-dev-obtenerUsoEquipo"
            }
          },
          "EliminarUsoEquipoLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/apiproductos-dev-eliminarUsoEquipo"
            }
          },
          "ActualizarUsoEquipoLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/apiproductos-dev-actualizarUsoEquipo"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "apiproductos",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/apiproductos-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/apiproductos-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "apiproductos",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "AgregarUserLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-1c6f9a6f-8b98",
                "S3Key": "serverless/apiproductos/dev/1751152684187-2025-06-28T23:18:04.187Z/apiproductos.zip"
              },
              "Handler": "src/usuarios/agregarUser.agregarUser",
              "Runtime": "nodejs20.x",
              "FunctionName": "apiproductos-dev-agregarUser",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "AgregarUserLogGroup"
            ]
          },
          "ObtenerUserLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-1c6f9a6f-8b98",
                "S3Key": "serverless/apiproductos/dev/1751152684187-2025-06-28T23:18:04.187Z/apiproductos.zip"
              },
              "Handler": "src/usuarios/obtenerUser.obtenerUser",
              "Runtime": "nodejs20.x",
              "FunctionName": "apiproductos-dev-obtenerUser",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ObtenerUserLogGroup"
            ]
          },
          "EliminarUserLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-1c6f9a6f-8b98",
                "S3Key": "serverless/apiproductos/dev/1751152684187-2025-06-28T23:18:04.187Z/apiproductos.zip"
              },
              "Handler": "src/usuarios/eliminarUser.eliminarUser",
              "Runtime": "nodejs20.x",
              "FunctionName": "apiproductos-dev-eliminarUser",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "EliminarUserLogGroup"
            ]
          },
          "ActualizarUserLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-1c6f9a6f-8b98",
                "S3Key": "serverless/apiproductos/dev/1751152684187-2025-06-28T23:18:04.187Z/apiproductos.zip"
              },
              "Handler": "src/usuarios/actualizarUser.actualizarUser",
              "Runtime": "nodejs20.x",
              "FunctionName": "apiproductos-dev-actualizarUser",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ActualizarUserLogGroup"
            ]
          },
          "ObtenerTodosUsuariosLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-1c6f9a6f-8b98",
                "S3Key": "serverless/apiproductos/dev/1751152684187-2025-06-28T23:18:04.187Z/apiproductos.zip"
              },
              "Handler": "src/usuarios/obtenerTodosUsuarios.obtenerTodosUsuarios",
              "Runtime": "nodejs20.x",
              "FunctionName": "apiproductos-dev-obtenerTodosUsuarios",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ObtenerTodosUsuariosLogGroup"
            ]
          },
          "AgregarLaboratorioLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-1c6f9a6f-8b98",
                "S3Key": "serverless/apiproductos/dev/1751152684187-2025-06-28T23:18:04.187Z/apiproductos.zip"
              },
              "Handler": "src/laboratorios/agregarLab.agregarLab",
              "Runtime": "nodejs20.x",
              "FunctionName": "apiproductos-dev-agregarLaboratorio",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "AgregarLaboratorioLogGroup"
            ]
          },
          "ObtenerLaboratorioLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-1c6f9a6f-8b98",
                "S3Key": "serverless/apiproductos/dev/1751152684187-2025-06-28T23:18:04.187Z/apiproductos.zip"
              },
              "Handler": "src/laboratorios/obtenerLab.obtenerLab",
              "Runtime": "nodejs20.x",
              "FunctionName": "apiproductos-dev-obtenerLaboratorio",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ObtenerLaboratorioLogGroup"
            ]
          },
          "EliminarLaboratorioLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-1c6f9a6f-8b98",
                "S3Key": "serverless/apiproductos/dev/1751152684187-2025-06-28T23:18:04.187Z/apiproductos.zip"
              },
              "Handler": "src/laboratorios/eliminarLab.eliminarLab",
              "Runtime": "nodejs20.x",
              "FunctionName": "apiproductos-dev-eliminarLaboratorio",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "EliminarLaboratorioLogGroup"
            ]
          },
          "ActualizarLaboratorioLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-1c6f9a6f-8b98",
                "S3Key": "serverless/apiproductos/dev/1751152684187-2025-06-28T23:18:04.187Z/apiproductos.zip"
              },
              "Handler": "src/laboratorios/actualizarLab.actualizarLab",
              "Runtime": "nodejs20.x",
              "FunctionName": "apiproductos-dev-actualizarLaboratorio",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ActualizarLaboratorioLogGroup"
            ]
          },
          "AgregarAsignaturaLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-1c6f9a6f-8b98",
                "S3Key": "serverless/apiproductos/dev/1751152684187-2025-06-28T23:18:04.187Z/apiproductos.zip"
              },
              "Handler": "src/asignaturas/agregarAsig.agregarAsig",
              "Runtime": "nodejs20.x",
              "FunctionName": "apiproductos-dev-agregarAsignatura",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "AgregarAsignaturaLogGroup"
            ]
          },
          "ObtenerAsignaturaLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-1c6f9a6f-8b98",
                "S3Key": "serverless/apiproductos/dev/1751152684187-2025-06-28T23:18:04.187Z/apiproductos.zip"
              },
              "Handler": "src/asignaturas/obtenerAsig.obtenerAsig",
              "Runtime": "nodejs20.x",
              "FunctionName": "apiproductos-dev-obtenerAsignatura",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ObtenerAsignaturaLogGroup"
            ]
          },
          "EliminarAsignaturaLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-1c6f9a6f-8b98",
                "S3Key": "serverless/apiproductos/dev/1751152684187-2025-06-28T23:18:04.187Z/apiproductos.zip"
              },
              "Handler": "src/asignaturas/eliminarAsig.eliminarAsig",
              "Runtime": "nodejs20.x",
              "FunctionName": "apiproductos-dev-eliminarAsignatura",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "EliminarAsignaturaLogGroup"
            ]
          },
          "ObtenerAsignaturasPorDocenteLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-1c6f9a6f-8b98",
                "S3Key": "serverless/apiproductos/dev/1751152684187-2025-06-28T23:18:04.187Z/apiproductos.zip"
              },
              "Handler": "src/asignaturas/obtenerPorDocente.obtenerAsignaturasPorDocente",
              "Runtime": "nodejs20.x",
              "FunctionName": "apiproductos-dev-obtenerAsignaturasPorDocente",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ObtenerAsignaturasPorDocenteLogGroup"
            ]
          },
          "ObtenerAsignaturasPorEstudianteLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-1c6f9a6f-8b98",
                "S3Key": "serverless/apiproductos/dev/1751152684187-2025-06-28T23:18:04.187Z/apiproductos.zip"
              },
              "Handler": "src/asignaturas/obtenerAsignaturasPorEstudiante.obtenerAsignaturasPorEstudiante",
              "Runtime": "nodejs20.x",
              "FunctionName": "apiproductos-dev-obtenerAsignaturasPorEstudiante",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ObtenerAsignaturasPorEstudianteLogGroup"
            ]
          },
          "ActualizarAsignaturaLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-1c6f9a6f-8b98",
                "S3Key": "serverless/apiproductos/dev/1751152684187-2025-06-28T23:18:04.187Z/apiproductos.zip"
              },
              "Handler": "src/asignaturas/actualizarAsig.actualizarAsig",
              "Runtime": "nodejs20.x",
              "FunctionName": "apiproductos-dev-actualizarAsignatura",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ActualizarAsignaturaLogGroup"
            ]
          },
          "ObtenerTodasAsignaturasLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-1c6f9a6f-8b98",
                "S3Key": "serverless/apiproductos/dev/1751152684187-2025-06-28T23:18:04.187Z/apiproductos.zip"
              },
              "Handler": "src/asignaturas/obtenerTodasAsignaturas.obtenerTodasAsignaturas",
              "Runtime": "nodejs20.x",
              "FunctionName": "apiproductos-dev-obtenerTodasAsignaturas",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ObtenerTodasAsignaturasLogGroup"
            ]
          },
          "AgregarParcialLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-1c6f9a6f-8b98",
                "S3Key": "serverless/apiproductos/dev/1751152684187-2025-06-28T23:18:04.187Z/apiproductos.zip"
              },
              "Handler": "src/parciales/agregarPar.agregarPar",
              "Runtime": "nodejs20.x",
              "FunctionName": "apiproductos-dev-agregarParcial",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "AgregarParcialLogGroup"
            ]
          },
          "ObtenerTodosParcialesLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-1c6f9a6f-8b98",
                "S3Key": "serverless/apiproductos/dev/1751152684187-2025-06-28T23:18:04.187Z/apiproductos.zip"
              },
              "Handler": "src/parciales/obtenerTodosParciales.obtenerTodosParciales",
              "Runtime": "nodejs20.x",
              "FunctionName": "apiproductos-dev-obtenerTodosParciales",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ObtenerTodosParcialesLogGroup"
            ]
          },
          "EliminarParcialLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-1c6f9a6f-8b98",
                "S3Key": "serverless/apiproductos/dev/1751152684187-2025-06-28T23:18:04.187Z/apiproductos.zip"
              },
              "Handler": "src/parciales/eliminarPar.eliminarPar",
              "Runtime": "nodejs20.x",
              "FunctionName": "apiproductos-dev-eliminarParcial",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "EliminarParcialLogGroup"
            ]
          },
          "ActualizarParcialLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-1c6f9a6f-8b98",
                "S3Key": "serverless/apiproductos/dev/1751152684187-2025-06-28T23:18:04.187Z/apiproductos.zip"
              },
              "Handler": "src/parciales/actualizarPar.actualizarPar",
              "Runtime": "nodejs20.x",
              "FunctionName": "apiproductos-dev-actualizarParcial",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ActualizarParcialLogGroup"
            ]
          },
          "AgregarPracticaLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-1c6f9a6f-8b98",
                "S3Key": "serverless/apiproductos/dev/1751152684187-2025-06-28T23:18:04.187Z/apiproductos.zip"
              },
              "Handler": "src/practicas/agregarPract.agregarPract",
              "Runtime": "nodejs20.x",
              "FunctionName": "apiproductos-dev-agregarPractica",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "AgregarPracticaLogGroup"
            ]
          },
          "ObtenerPracticasLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-1c6f9a6f-8b98",
                "S3Key": "serverless/apiproductos/dev/1751152684187-2025-06-28T23:18:04.187Z/apiproductos.zip"
              },
              "Handler": "src/practicas/obtenerPract.obtenerPract",
              "Runtime": "nodejs20.x",
              "FunctionName": "apiproductos-dev-obtenerPracticas",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ObtenerPracticasLogGroup"
            ]
          },
          "EliminarPracticaLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-1c6f9a6f-8b98",
                "S3Key": "serverless/apiproductos/dev/1751152684187-2025-06-28T23:18:04.187Z/apiproductos.zip"
              },
              "Handler": "src/practicas/eliminarPract.eliminarPract",
              "Runtime": "nodejs20.x",
              "FunctionName": "apiproductos-dev-eliminarPractica",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "EliminarPracticaLogGroup"
            ]
          },
          "ActualizarPracticaLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-1c6f9a6f-8b98",
                "S3Key": "serverless/apiproductos/dev/1751152684187-2025-06-28T23:18:04.187Z/apiproductos.zip"
              },
              "Handler": "src/practicas/actualizarPract.actualizarPract",
              "Runtime": "nodejs20.x",
              "FunctionName": "apiproductos-dev-actualizarPractica",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ActualizarPracticaLogGroup"
            ]
          },
          "ObtenerPracticasPorDocenteLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-1c6f9a6f-8b98",
                "S3Key": "serverless/apiproductos/dev/1751152684187-2025-06-28T23:18:04.187Z/apiproductos.zip"
              },
              "Handler": "src/practicas/obtenerPracticasPorDocente.obtenerPracticasPorDocente",
              "Runtime": "nodejs20.x",
              "FunctionName": "apiproductos-dev-obtenerPracticasPorDocente",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ObtenerPracticasPorDocenteLogGroup"
            ]
          },
          "AgregarUsoEquipoLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-1c6f9a6f-8b98",
                "S3Key": "serverless/apiproductos/dev/1751152684187-2025-06-28T23:18:04.187Z/apiproductos.zip"
              },
              "Handler": "src/usoEquipo/agregarEquip.agregarEquip",
              "Runtime": "nodejs20.x",
              "FunctionName": "apiproductos-dev-agregarUsoEquipo",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "AgregarUsoEquipoLogGroup"
            ]
          },
          "ObtenerUsoEquipoLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-1c6f9a6f-8b98",
                "S3Key": "serverless/apiproductos/dev/1751152684187-2025-06-28T23:18:04.187Z/apiproductos.zip"
              },
              "Handler": "src/usoEquipo/obtenerEquip.obtenerEquip",
              "Runtime": "nodejs20.x",
              "FunctionName": "apiproductos-dev-obtenerUsoEquipo",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ObtenerUsoEquipoLogGroup"
            ]
          },
          "EliminarUsoEquipoLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-1c6f9a6f-8b98",
                "S3Key": "serverless/apiproductos/dev/1751152684187-2025-06-28T23:18:04.187Z/apiproductos.zip"
              },
              "Handler": "src/usoEquipo/eliminarEquip.eliminarEquip",
              "Runtime": "nodejs20.x",
              "FunctionName": "apiproductos-dev-eliminarUsoEquipo",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "EliminarUsoEquipoLogGroup"
            ]
          },
          "ActualizarUsoEquipoLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-1c6f9a6f-8b98",
                "S3Key": "serverless/apiproductos/dev/1751152684187-2025-06-28T23:18:04.187Z/apiproductos.zip"
              },
              "Handler": "src/usoEquipo/actualizarEquip.actualizarEquip",
              "Runtime": "nodejs20.x",
              "FunctionName": "apiproductos-dev-actualizarUsoEquipo",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ActualizarUsoEquipoLogGroup"
            ]
          },
          "AgregarUserLambdaVersion4ckOK7KesymbHwvYrNjmnHlLFyg3Ivs72VzsDwimg": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AgregarUserLambdaFunction"
              },
              "CodeSha256": "+JHhiz25ezw7tfPq4M2DaUqiyDmE2HhAZpK0ruHlhS8="
            }
          },
          "ObtenerUserLambdaVersionJII7pLVXhUmTjbpohX8c0mVjmwoYM4Iadblz8VYQao": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ObtenerUserLambdaFunction"
              },
              "CodeSha256": "+JHhiz25ezw7tfPq4M2DaUqiyDmE2HhAZpK0ruHlhS8="
            }
          },
          "EliminarUserLambdaVersionx3FsYhZYZ5XigWsNGagJGhya1M2yxt2tllyQSHyq4w": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "EliminarUserLambdaFunction"
              },
              "CodeSha256": "+JHhiz25ezw7tfPq4M2DaUqiyDmE2HhAZpK0ruHlhS8="
            }
          },
          "ActualizarUserLambdaVersionn1hozK7qesp4zzxFft3WYaPENpxvQJpgSSSqeCrA": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ActualizarUserLambdaFunction"
              },
              "CodeSha256": "+JHhiz25ezw7tfPq4M2DaUqiyDmE2HhAZpK0ruHlhS8="
            }
          },
          "ObtenerTodosUsuariosLambdaVersionk5vEBZ1nETxpFtuvenhhg0Fr1IZ0dvlASVoI3mvPxU": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ObtenerTodosUsuariosLambdaFunction"
              },
              "CodeSha256": "+JHhiz25ezw7tfPq4M2DaUqiyDmE2HhAZpK0ruHlhS8="
            }
          },
          "AgregarLaboratorioLambdaVersionV0VSnSWwpHjRHfoEBkZn1nUGCbAY53TudUbsUxNCjKU": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AgregarLaboratorioLambdaFunction"
              },
              "CodeSha256": "+JHhiz25ezw7tfPq4M2DaUqiyDmE2HhAZpK0ruHlhS8="
            }
          },
          "ObtenerLaboratorioLambdaVersiono7jnDmlKaftu3B2vaDkIYRO5KiXvPJbtKgQOneG8": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ObtenerLaboratorioLambdaFunction"
              },
              "CodeSha256": "+JHhiz25ezw7tfPq4M2DaUqiyDmE2HhAZpK0ruHlhS8="
            }
          },
          "EliminarLaboratorioLambdaVersion8W5m6RnUDV2G8MmnBetFbgl2ru6UMlCESdsagKkoU": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "EliminarLaboratorioLambdaFunction"
              },
              "CodeSha256": "+JHhiz25ezw7tfPq4M2DaUqiyDmE2HhAZpK0ruHlhS8="
            }
          },
          "ActualizarLaboratorioLambdaVersion9GnKg45RJgEMEJnN1NHALjNsgJxfZaI4b45EQYu48": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ActualizarLaboratorioLambdaFunction"
              },
              "CodeSha256": "+JHhiz25ezw7tfPq4M2DaUqiyDmE2HhAZpK0ruHlhS8="
            }
          },
          "AgregarAsignaturaLambdaVersionoh9TdiY5pj80zsEfDdiqYCWNQ59GuCn0Byaq68XaZg": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AgregarAsignaturaLambdaFunction"
              },
              "CodeSha256": "+JHhiz25ezw7tfPq4M2DaUqiyDmE2HhAZpK0ruHlhS8="
            }
          },
          "ObtenerAsignaturaLambdaVersionaQ2ZVTEx3qCwj21B1eTzFuSxcrV3Ze1USwGAjjl4lw": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ObtenerAsignaturaLambdaFunction"
              },
              "CodeSha256": "+JHhiz25ezw7tfPq4M2DaUqiyDmE2HhAZpK0ruHlhS8="
            }
          },
          "EliminarAsignaturaLambdaVersionqLBWdxBSRW5avDiRALDExW01vL5dOa2YNBlQiNZAc": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "EliminarAsignaturaLambdaFunction"
              },
              "CodeSha256": "+JHhiz25ezw7tfPq4M2DaUqiyDmE2HhAZpK0ruHlhS8="
            }
          },
          "ObtenerAsignaturasPorDocenteLambdaVersionkOq01rIu75P5hJmSoHjmzhqzjk86h9bqQXxlZEg8BA": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ObtenerAsignaturasPorDocenteLambdaFunction"
              },
              "CodeSha256": "+JHhiz25ezw7tfPq4M2DaUqiyDmE2HhAZpK0ruHlhS8="
            }
          },
          "ObtenerAsignaturasPorEstudianteLambdaVersion6dbS4wAvLTKrYdN1eIbI0DUU4WMkVGsuzwBAtphqJg": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ObtenerAsignaturasPorEstudianteLambdaFunction"
              },
              "CodeSha256": "+JHhiz25ezw7tfPq4M2DaUqiyDmE2HhAZpK0ruHlhS8="
            }
          },
          "ActualizarAsignaturaLambdaVersionY1ojd65vnPnBB2SGlUHeSmndQORu1KgAuBYzq3U1II": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ActualizarAsignaturaLambdaFunction"
              },
              "CodeSha256": "+JHhiz25ezw7tfPq4M2DaUqiyDmE2HhAZpK0ruHlhS8="
            }
          },
          "ObtenerTodasAsignaturasLambdaVersionr7H32fxbVrMZr3YazCVuCvdOgpdAZrSkoIbFLXEMfeg": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ObtenerTodasAsignaturasLambdaFunction"
              },
              "CodeSha256": "+JHhiz25ezw7tfPq4M2DaUqiyDmE2HhAZpK0ruHlhS8="
            }
          },
          "AgregarParcialLambdaVersionMckD7rXB1oV6cgWeEVdiQ1WZUhrFCifE3UTAp50fns": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AgregarParcialLambdaFunction"
              },
              "CodeSha256": "+JHhiz25ezw7tfPq4M2DaUqiyDmE2HhAZpK0ruHlhS8="
            }
          },
          "ObtenerTodosParcialesLambdaVersionC6mKyhZJbeTDwF3gxuha8M63ehuP34Rrtl2irr8vU": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ObtenerTodosParcialesLambdaFunction"
              },
              "CodeSha256": "+JHhiz25ezw7tfPq4M2DaUqiyDmE2HhAZpK0ruHlhS8="
            }
          },
          "EliminarParcialLambdaVersionuMi6ub34VZWsOgFpJ2kGlT7Ic1aOm8F3juExHx2xSA": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "EliminarParcialLambdaFunction"
              },
              "CodeSha256": "+JHhiz25ezw7tfPq4M2DaUqiyDmE2HhAZpK0ruHlhS8="
            }
          },
          "ActualizarParcialLambdaVersiondjv7LzWFLPi4ineSU0GrfbkaN23zaXnAXvm4aZkzqQ": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ActualizarParcialLambdaFunction"
              },
              "CodeSha256": "+JHhiz25ezw7tfPq4M2DaUqiyDmE2HhAZpK0ruHlhS8="
            }
          },
          "AgregarPracticaLambdaVersion3q0XoezcgBP5iPYPtIKEmrEcWt5C750wgn2jZnh5h6U": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AgregarPracticaLambdaFunction"
              },
              "CodeSha256": "+JHhiz25ezw7tfPq4M2DaUqiyDmE2HhAZpK0ruHlhS8="
            }
          },
          "ObtenerPracticasLambdaVersionKfWPvud8kpOTbTwMUH16bMyrJkuXhpC3HkdMxF3rM": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ObtenerPracticasLambdaFunction"
              },
              "CodeSha256": "+JHhiz25ezw7tfPq4M2DaUqiyDmE2HhAZpK0ruHlhS8="
            }
          },
          "EliminarPracticaLambdaVersion2srWBIMvu0ZFODo5LKVSURWgkZNqG7LxgsE6jqnPc": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "EliminarPracticaLambdaFunction"
              },
              "CodeSha256": "+JHhiz25ezw7tfPq4M2DaUqiyDmE2HhAZpK0ruHlhS8="
            }
          },
          "ActualizarPracticaLambdaVersionxl8QIWx7awFKX6wQ0tUPkT68bv7vcEC2FtbjzxY1p8": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ActualizarPracticaLambdaFunction"
              },
              "CodeSha256": "+JHhiz25ezw7tfPq4M2DaUqiyDmE2HhAZpK0ruHlhS8="
            }
          },
          "ObtenerPracticasPorDocenteLambdaVersionZus9M9gM5D4bJ0yGeUgRBRqlgFSkXn0l9VUeZg9Oeo": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ObtenerPracticasPorDocenteLambdaFunction"
              },
              "CodeSha256": "+JHhiz25ezw7tfPq4M2DaUqiyDmE2HhAZpK0ruHlhS8="
            }
          },
          "AgregarUsoEquipoLambdaVersiongRAkqJebpVHFVoe8aDN4GmhtinHYiJr8ysyi1QtkjP0": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AgregarUsoEquipoLambdaFunction"
              },
              "CodeSha256": "+JHhiz25ezw7tfPq4M2DaUqiyDmE2HhAZpK0ruHlhS8="
            }
          },
          "ObtenerUsoEquipoLambdaVersionZpl3mVsSOmYw6mMQA41XZUW2MdxTGBmOAtUYiRGksA": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ObtenerUsoEquipoLambdaFunction"
              },
              "CodeSha256": "+JHhiz25ezw7tfPq4M2DaUqiyDmE2HhAZpK0ruHlhS8="
            }
          },
          "EliminarUsoEquipoLambdaVersionVOYxQ6gZXmdyB1i36CmbZA1LgtRkW6kvpm0vpiBkHmg": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "EliminarUsoEquipoLambdaFunction"
              },
              "CodeSha256": "+JHhiz25ezw7tfPq4M2DaUqiyDmE2HhAZpK0ruHlhS8="
            }
          },
          "ActualizarUsoEquipoLambdaVersiontU5M0E3MnBXJuX0UYXUXve2dGVzJ7tFSeorQnRS4dVk": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ActualizarUsoEquipoLambdaFunction"
              },
              "CodeSha256": "+JHhiz25ezw7tfPq4M2DaUqiyDmE2HhAZpK0ruHlhS8="
            }
          },
          "HttpApi": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
              "Name": "dev-apiproductos",
              "ProtocolType": "HTTP",
              "CorsConfiguration": {
                "AllowHeaders": [
                  "Content-Type"
                ],
                "AllowMethods": [
                  "GET",
                  "POST",
                  "PUT",
                  "DELETE",
                  "OPTIONS"
                ],
                "AllowOrigins": [
                  "http://localhost:4200"
                ]
              }
            }
          },
          "HttpApiStage": {
            "Type": "AWS::ApiGatewayV2::Stage",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "StageName": "$default",
              "AutoDeploy": true,
              "DefaultRouteSettings": {
                "DetailedMetricsEnabled": false
              }
            }
          },
          "AgregarUserLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "AgregarUserLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationAgregarUser": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"AgregarUserLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostUsuario": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /usuario",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationAgregarUser"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationAgregarUser"
          },
          "ObtenerUserLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ObtenerUserLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationObtenerUser": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ObtenerUserLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetUsuarioIdVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /usuario/{id}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationObtenerUser"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationObtenerUser"
          },
          "EliminarUserLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "EliminarUserLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationEliminarUser": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"EliminarUserLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteDeleteUsuarioIdVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "DELETE /usuario/{id}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationEliminarUser"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationEliminarUser"
          },
          "ActualizarUserLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ActualizarUserLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationActualizarUser": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ActualizarUserLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePutUsuarioIdVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "PUT /usuario/{id}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationActualizarUser"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationActualizarUser"
          },
          "ObtenerTodosUsuariosLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ObtenerTodosUsuariosLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationObtenerTodosUsuarios": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ObtenerTodosUsuariosLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetUsuarios": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /usuarios",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationObtenerTodosUsuarios"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationObtenerTodosUsuarios"
          },
          "AgregarLaboratorioLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "AgregarLaboratorioLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationAgregarLaboratorio": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"AgregarLaboratorioLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostLaboratorio": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /laboratorio",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationAgregarLaboratorio"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationAgregarLaboratorio"
          },
          "ObtenerLaboratorioLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ObtenerLaboratorioLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationObtenerLaboratorio": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ObtenerLaboratorioLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetLaboratorioIdVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /laboratorio/{id}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationObtenerLaboratorio"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationObtenerLaboratorio"
          },
          "EliminarLaboratorioLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "EliminarLaboratorioLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationEliminarLaboratorio": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"EliminarLaboratorioLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteDeleteLaboratorioIdVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "DELETE /laboratorio/{id}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationEliminarLaboratorio"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationEliminarLaboratorio"
          },
          "ActualizarLaboratorioLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ActualizarLaboratorioLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationActualizarLaboratorio": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ActualizarLaboratorioLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePutLaboratorioIdVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "PUT /laboratorio/{id}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationActualizarLaboratorio"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationActualizarLaboratorio"
          },
          "AgregarAsignaturaLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "AgregarAsignaturaLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationAgregarAsignatura": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"AgregarAsignaturaLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostAsignatura": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /asignatura",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationAgregarAsignatura"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationAgregarAsignatura"
          },
          "ObtenerAsignaturaLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ObtenerAsignaturaLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationObtenerAsignatura": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ObtenerAsignaturaLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetAsignaturaIdVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /asignatura/{id}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationObtenerAsignatura"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationObtenerAsignatura"
          },
          "EliminarAsignaturaLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "EliminarAsignaturaLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationEliminarAsignatura": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"EliminarAsignaturaLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteDeleteAsignaturaIdVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "DELETE /asignatura/{id}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationEliminarAsignatura"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationEliminarAsignatura"
          },
          "ObtenerAsignaturasPorDocenteLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ObtenerAsignaturasPorDocenteLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationObtenerAsignaturasPorDocente": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ObtenerAsignaturasPorDocenteLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetAsignaturasDocenteDocenteidVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /asignaturas/docente/{docenteId}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationObtenerAsignaturasPorDocente"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationObtenerAsignaturasPorDocente"
          },
          "ObtenerAsignaturasPorEstudianteLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ObtenerAsignaturasPorEstudianteLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationObtenerAsignaturasPorEstudiante": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ObtenerAsignaturasPorEstudianteLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetAsignaturasEstudianteIdVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /asignaturas/estudiante/{id}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationObtenerAsignaturasPorEstudiante"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationObtenerAsignaturasPorEstudiante"
          },
          "ActualizarAsignaturaLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ActualizarAsignaturaLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationActualizarAsignatura": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ActualizarAsignaturaLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePutAsignaturaIdVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "PUT /asignatura/{id}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationActualizarAsignatura"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationActualizarAsignatura"
          },
          "ObtenerTodasAsignaturasLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ObtenerTodasAsignaturasLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationObtenerTodasAsignaturas": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ObtenerTodasAsignaturasLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetAsignaturas": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /asignaturas",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationObtenerTodasAsignaturas"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationObtenerTodasAsignaturas"
          },
          "AgregarParcialLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "AgregarParcialLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationAgregarParcial": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"AgregarParcialLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostParciales": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /parciales",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationAgregarParcial"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationAgregarParcial"
          },
          "ObtenerTodosParcialesLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ObtenerTodosParcialesLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationObtenerTodosParciales": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ObtenerTodosParcialesLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetParciales": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /parciales",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationObtenerTodosParciales"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationObtenerTodosParciales"
          },
          "EliminarParcialLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "EliminarParcialLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationEliminarParcial": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"EliminarParcialLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteDeleteParcialesIdVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "DELETE /parciales/{id}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationEliminarParcial"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationEliminarParcial"
          },
          "ActualizarParcialLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ActualizarParcialLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationActualizarParcial": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ActualizarParcialLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePutParcialesIdVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "PUT /parciales/{id}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationActualizarParcial"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationActualizarParcial"
          },
          "AgregarPracticaLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "AgregarPracticaLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationAgregarPractica": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"AgregarPracticaLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostPracticas": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /practicas",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationAgregarPractica"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationAgregarPractica"
          },
          "ObtenerPracticasLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ObtenerPracticasLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationObtenerPracticas": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ObtenerPracticasLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetPracticas": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /practicas",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationObtenerPracticas"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationObtenerPracticas"
          },
          "EliminarPracticaLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "EliminarPracticaLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationEliminarPractica": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"EliminarPracticaLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteDeletePracticasIdVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "DELETE /practicas/{id}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationEliminarPractica"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationEliminarPractica"
          },
          "ActualizarPracticaLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ActualizarPracticaLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationActualizarPractica": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ActualizarPracticaLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePutPracticasIdVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "PUT /practicas/{id}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationActualizarPractica"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationActualizarPractica"
          },
          "ObtenerPracticasPorDocenteLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ObtenerPracticasPorDocenteLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationObtenerPracticasPorDocente": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ObtenerPracticasPorDocenteLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetPracticasDocenteDocenteidVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /practicas/docente/{docenteId}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationObtenerPracticasPorDocente"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationObtenerPracticasPorDocente"
          },
          "AgregarUsoEquipoLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "AgregarUsoEquipoLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationAgregarUsoEquipo": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"AgregarUsoEquipoLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePostUsoequipo": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "POST /usoEquipo",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationAgregarUsoEquipo"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationAgregarUsoEquipo"
          },
          "ObtenerUsoEquipoLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ObtenerUsoEquipoLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationObtenerUsoEquipo": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ObtenerUsoEquipoLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteGetUsoequipoIdVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /usoEquipo/{id}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationObtenerUsoEquipo"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationObtenerUsoEquipo"
          },
          "EliminarUsoEquipoLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "EliminarUsoEquipoLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationEliminarUsoEquipo": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"EliminarUsoEquipoLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteDeleteUsoequipoIdVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "DELETE /usoEquipo/{id}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationEliminarUsoEquipo"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationEliminarUsoEquipo"
          },
          "ActualizarUsoEquipoLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ActualizarUsoEquipoLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationActualizarUsoEquipo": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ActualizarUsoEquipoLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRoutePutUsoequipoIdVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "PUT /usoEquipo/{id}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationActualizarUsoEquipo"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationActualizarUsoEquipo"
          },
          "UsuarioTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "usuario",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          },
          "LaboratoriosTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "laboratorios",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          },
          "AsignaturasTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "asignaturas",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          },
          "ParcialesTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "parciales",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          },
          "PracticasTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "practicas",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          },
          "UsoEquipoTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "usoEquipo",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "serverless-framework-deployments-us-east-1-1c6f9a6f-8b98",
            "Export": {
              "Name": "sls-apiproductos-dev-ServerlessDeploymentBucketName"
            }
          },
          "AgregarUserLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AgregarUserLambdaVersion4ckOK7KesymbHwvYrNjmnHlLFyg3Ivs72VzsDwimg"
            },
            "Export": {
              "Name": "sls-apiproductos-dev-AgregarUserLambdaFunctionQualifiedArn"
            }
          },
          "ObtenerUserLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ObtenerUserLambdaVersionJII7pLVXhUmTjbpohX8c0mVjmwoYM4Iadblz8VYQao"
            },
            "Export": {
              "Name": "sls-apiproductos-dev-ObtenerUserLambdaFunctionQualifiedArn"
            }
          },
          "EliminarUserLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "EliminarUserLambdaVersionx3FsYhZYZ5XigWsNGagJGhya1M2yxt2tllyQSHyq4w"
            },
            "Export": {
              "Name": "sls-apiproductos-dev-EliminarUserLambdaFunctionQualifiedArn"
            }
          },
          "ActualizarUserLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ActualizarUserLambdaVersionn1hozK7qesp4zzxFft3WYaPENpxvQJpgSSSqeCrA"
            },
            "Export": {
              "Name": "sls-apiproductos-dev-ActualizarUserLambdaFunctionQualifiedArn"
            }
          },
          "ObtenerTodosUsuariosLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ObtenerTodosUsuariosLambdaVersionk5vEBZ1nETxpFtuvenhhg0Fr1IZ0dvlASVoI3mvPxU"
            },
            "Export": {
              "Name": "sls-apiproductos-dev-ObtenerTodosUsuariosLambdaFunctionQualifiedArn"
            }
          },
          "AgregarLaboratorioLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AgregarLaboratorioLambdaVersionV0VSnSWwpHjRHfoEBkZn1nUGCbAY53TudUbsUxNCjKU"
            },
            "Export": {
              "Name": "sls-apiproductos-dev-AgregarLaboratorioLambdaFunctionQualifiedArn"
            }
          },
          "ObtenerLaboratorioLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ObtenerLaboratorioLambdaVersiono7jnDmlKaftu3B2vaDkIYRO5KiXvPJbtKgQOneG8"
            },
            "Export": {
              "Name": "sls-apiproductos-dev-ObtenerLaboratorioLambdaFunctionQualifiedArn"
            }
          },
          "EliminarLaboratorioLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "EliminarLaboratorioLambdaVersion8W5m6RnUDV2G8MmnBetFbgl2ru6UMlCESdsagKkoU"
            },
            "Export": {
              "Name": "sls-apiproductos-dev-EliminarLaboratorioLambdaFunctionQualifiedArn"
            }
          },
          "ActualizarLaboratorioLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ActualizarLaboratorioLambdaVersion9GnKg45RJgEMEJnN1NHALjNsgJxfZaI4b45EQYu48"
            },
            "Export": {
              "Name": "sls-apiproductos-dev-ActualizarLaboratorioLambdaFunctionQualifiedArn"
            }
          },
          "AgregarAsignaturaLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AgregarAsignaturaLambdaVersionoh9TdiY5pj80zsEfDdiqYCWNQ59GuCn0Byaq68XaZg"
            },
            "Export": {
              "Name": "sls-apiproductos-dev-AgregarAsignaturaLambdaFunctionQualifiedArn"
            }
          },
          "ObtenerAsignaturaLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ObtenerAsignaturaLambdaVersionaQ2ZVTEx3qCwj21B1eTzFuSxcrV3Ze1USwGAjjl4lw"
            },
            "Export": {
              "Name": "sls-apiproductos-dev-ObtenerAsignaturaLambdaFunctionQualifiedArn"
            }
          },
          "EliminarAsignaturaLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "EliminarAsignaturaLambdaVersionqLBWdxBSRW5avDiRALDExW01vL5dOa2YNBlQiNZAc"
            },
            "Export": {
              "Name": "sls-apiproductos-dev-EliminarAsignaturaLambdaFunctionQualifiedArn"
            }
          },
          "ObtenerAsignaturasPorDocenteLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ObtenerAsignaturasPorDocenteLambdaVersionkOq01rIu75P5hJmSoHjmzhqzjk86h9bqQXxlZEg8BA"
            },
            "Export": {
              "Name": "sls-apiproductos-dev-ObtenerAsignaturasPorDocenteLambdaFunctionQualifiedArn"
            }
          },
          "ObtenerAsignaturasPorEstudianteLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ObtenerAsignaturasPorEstudianteLambdaVersion6dbS4wAvLTKrYdN1eIbI0DUU4WMkVGsuzwBAtphqJg"
            },
            "Export": {
              "Name": "sls-apiproductos-dev-ObtenerAsignaturasPorEstudianteLambdaFunctionQualifiedArn"
            }
          },
          "ActualizarAsignaturaLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ActualizarAsignaturaLambdaVersionY1ojd65vnPnBB2SGlUHeSmndQORu1KgAuBYzq3U1II"
            },
            "Export": {
              "Name": "sls-apiproductos-dev-ActualizarAsignaturaLambdaFunctionQualifiedArn"
            }
          },
          "ObtenerTodasAsignaturasLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ObtenerTodasAsignaturasLambdaVersionr7H32fxbVrMZr3YazCVuCvdOgpdAZrSkoIbFLXEMfeg"
            },
            "Export": {
              "Name": "sls-apiproductos-dev-ObtenerTodasAsignaturasLambdaFunctionQualifiedArn"
            }
          },
          "AgregarParcialLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AgregarParcialLambdaVersionMckD7rXB1oV6cgWeEVdiQ1WZUhrFCifE3UTAp50fns"
            },
            "Export": {
              "Name": "sls-apiproductos-dev-AgregarParcialLambdaFunctionQualifiedArn"
            }
          },
          "ObtenerTodosParcialesLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ObtenerTodosParcialesLambdaVersionC6mKyhZJbeTDwF3gxuha8M63ehuP34Rrtl2irr8vU"
            },
            "Export": {
              "Name": "sls-apiproductos-dev-ObtenerTodosParcialesLambdaFunctionQualifiedArn"
            }
          },
          "EliminarParcialLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "EliminarParcialLambdaVersionuMi6ub34VZWsOgFpJ2kGlT7Ic1aOm8F3juExHx2xSA"
            },
            "Export": {
              "Name": "sls-apiproductos-dev-EliminarParcialLambdaFunctionQualifiedArn"
            }
          },
          "ActualizarParcialLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ActualizarParcialLambdaVersiondjv7LzWFLPi4ineSU0GrfbkaN23zaXnAXvm4aZkzqQ"
            },
            "Export": {
              "Name": "sls-apiproductos-dev-ActualizarParcialLambdaFunctionQualifiedArn"
            }
          },
          "AgregarPracticaLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AgregarPracticaLambdaVersion3q0XoezcgBP5iPYPtIKEmrEcWt5C750wgn2jZnh5h6U"
            },
            "Export": {
              "Name": "sls-apiproductos-dev-AgregarPracticaLambdaFunctionQualifiedArn"
            }
          },
          "ObtenerPracticasLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ObtenerPracticasLambdaVersionKfWPvud8kpOTbTwMUH16bMyrJkuXhpC3HkdMxF3rM"
            },
            "Export": {
              "Name": "sls-apiproductos-dev-ObtenerPracticasLambdaFunctionQualifiedArn"
            }
          },
          "EliminarPracticaLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "EliminarPracticaLambdaVersion2srWBIMvu0ZFODo5LKVSURWgkZNqG7LxgsE6jqnPc"
            },
            "Export": {
              "Name": "sls-apiproductos-dev-EliminarPracticaLambdaFunctionQualifiedArn"
            }
          },
          "ActualizarPracticaLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ActualizarPracticaLambdaVersionxl8QIWx7awFKX6wQ0tUPkT68bv7vcEC2FtbjzxY1p8"
            },
            "Export": {
              "Name": "sls-apiproductos-dev-ActualizarPracticaLambdaFunctionQualifiedArn"
            }
          },
          "ObtenerPracticasPorDocenteLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ObtenerPracticasPorDocenteLambdaVersionZus9M9gM5D4bJ0yGeUgRBRqlgFSkXn0l9VUeZg9Oeo"
            },
            "Export": {
              "Name": "sls-apiproductos-dev-ObtenerPracticasPorDocenteLambdaFunctionQualifiedArn"
            }
          },
          "AgregarUsoEquipoLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AgregarUsoEquipoLambdaVersiongRAkqJebpVHFVoe8aDN4GmhtinHYiJr8ysyi1QtkjP0"
            },
            "Export": {
              "Name": "sls-apiproductos-dev-AgregarUsoEquipoLambdaFunctionQualifiedArn"
            }
          },
          "ObtenerUsoEquipoLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ObtenerUsoEquipoLambdaVersionZpl3mVsSOmYw6mMQA41XZUW2MdxTGBmOAtUYiRGksA"
            },
            "Export": {
              "Name": "sls-apiproductos-dev-ObtenerUsoEquipoLambdaFunctionQualifiedArn"
            }
          },
          "EliminarUsoEquipoLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "EliminarUsoEquipoLambdaVersionVOYxQ6gZXmdyB1i36CmbZA1LgtRkW6kvpm0vpiBkHmg"
            },
            "Export": {
              "Name": "sls-apiproductos-dev-EliminarUsoEquipoLambdaFunctionQualifiedArn"
            }
          },
          "ActualizarUsoEquipoLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ActualizarUsoEquipoLambdaVersiontU5M0E3MnBXJuX0UYXUXve2dGVzJ7tFSeorQnRS4dVk"
            },
            "Export": {
              "Name": "sls-apiproductos-dev-ActualizarUsoEquipoLambdaFunctionQualifiedArn"
            }
          },
          "HttpApiId": {
            "Description": "Id of the HTTP API",
            "Value": {
              "Ref": "HttpApi"
            },
            "Export": {
              "Name": "sls-apiproductos-dev-HttpApiId"
            }
          },
          "HttpApiUrl": {
            "Description": "URL of the HTTP API",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "HttpApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  }
                ]
              ]
            },
            "Export": {
              "Name": "sls-apiproductos-dev-HttpApiUrl"
            }
          }
        }
      },
      "vpc": {}
    },
    "pluginsData": {},
    "functions": {
      "agregarUser": {
        "handler": "src/usuarios/agregarUser.agregarUser",
        "events": [
          {
            "httpApi": {
              "path": "/usuario",
              "method": "post"
            },
            "resolvedMethod": "POST",
            "resolvedPath": "/usuario"
          }
        ],
        "name": "apiproductos-dev-agregarUser",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "AgregarUserLambdaVersion4ckOK7KesymbHwvYrNjmnHlLFyg3Ivs72VzsDwimg"
      },
      "obtenerUser": {
        "handler": "src/usuarios/obtenerUser.obtenerUser",
        "events": [
          {
            "httpApi": {
              "path": "/usuario/{id}",
              "method": "get"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/usuario/{id}"
          }
        ],
        "name": "apiproductos-dev-obtenerUser",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "ObtenerUserLambdaVersionJII7pLVXhUmTjbpohX8c0mVjmwoYM4Iadblz8VYQao"
      },
      "eliminarUser": {
        "handler": "src/usuarios/eliminarUser.eliminarUser",
        "events": [
          {
            "httpApi": {
              "path": "/usuario/{id}",
              "method": "delete"
            },
            "resolvedMethod": "DELETE",
            "resolvedPath": "/usuario/{id}"
          }
        ],
        "name": "apiproductos-dev-eliminarUser",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "EliminarUserLambdaVersionx3FsYhZYZ5XigWsNGagJGhya1M2yxt2tllyQSHyq4w"
      },
      "actualizarUser": {
        "handler": "src/usuarios/actualizarUser.actualizarUser",
        "events": [
          {
            "httpApi": {
              "path": "/usuario/{id}",
              "method": "put"
            },
            "resolvedMethod": "PUT",
            "resolvedPath": "/usuario/{id}"
          }
        ],
        "name": "apiproductos-dev-actualizarUser",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "ActualizarUserLambdaVersionn1hozK7qesp4zzxFft3WYaPENpxvQJpgSSSqeCrA"
      },
      "obtenerTodosUsuarios": {
        "handler": "src/usuarios/obtenerTodosUsuarios.obtenerTodosUsuarios",
        "events": [
          {
            "httpApi": {
              "path": "/usuarios",
              "method": "get"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/usuarios"
          }
        ],
        "name": "apiproductos-dev-obtenerTodosUsuarios",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "ObtenerTodosUsuariosLambdaVersionk5vEBZ1nETxpFtuvenhhg0Fr1IZ0dvlASVoI3mvPxU"
      },
      "agregarLaboratorio": {
        "handler": "src/laboratorios/agregarLab.agregarLab",
        "events": [
          {
            "httpApi": {
              "path": "/laboratorio",
              "method": "post"
            },
            "resolvedMethod": "POST",
            "resolvedPath": "/laboratorio"
          }
        ],
        "name": "apiproductos-dev-agregarLaboratorio",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "AgregarLaboratorioLambdaVersionV0VSnSWwpHjRHfoEBkZn1nUGCbAY53TudUbsUxNCjKU"
      },
      "obtenerLaboratorio": {
        "handler": "src/laboratorios/obtenerLab.obtenerLab",
        "events": [
          {
            "httpApi": {
              "path": "/laboratorio/{id}",
              "method": "get"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/laboratorio/{id}"
          }
        ],
        "name": "apiproductos-dev-obtenerLaboratorio",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "ObtenerLaboratorioLambdaVersiono7jnDmlKaftu3B2vaDkIYRO5KiXvPJbtKgQOneG8"
      },
      "eliminarLaboratorio": {
        "handler": "src/laboratorios/eliminarLab.eliminarLab",
        "events": [
          {
            "httpApi": {
              "path": "/laboratorio/{id}",
              "method": "delete"
            },
            "resolvedMethod": "DELETE",
            "resolvedPath": "/laboratorio/{id}"
          }
        ],
        "name": "apiproductos-dev-eliminarLaboratorio",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "EliminarLaboratorioLambdaVersion8W5m6RnUDV2G8MmnBetFbgl2ru6UMlCESdsagKkoU"
      },
      "actualizarLaboratorio": {
        "handler": "src/laboratorios/actualizarLab.actualizarLab",
        "events": [
          {
            "httpApi": {
              "path": "/laboratorio/{id}",
              "method": "put"
            },
            "resolvedMethod": "PUT",
            "resolvedPath": "/laboratorio/{id}"
          }
        ],
        "name": "apiproductos-dev-actualizarLaboratorio",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "ActualizarLaboratorioLambdaVersion9GnKg45RJgEMEJnN1NHALjNsgJxfZaI4b45EQYu48"
      },
      "agregarAsignatura": {
        "handler": "src/asignaturas/agregarAsig.agregarAsig",
        "events": [
          {
            "httpApi": {
              "path": "/asignatura",
              "method": "post"
            },
            "resolvedMethod": "POST",
            "resolvedPath": "/asignatura"
          }
        ],
        "name": "apiproductos-dev-agregarAsignatura",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "AgregarAsignaturaLambdaVersionoh9TdiY5pj80zsEfDdiqYCWNQ59GuCn0Byaq68XaZg"
      },
      "obtenerAsignatura": {
        "handler": "src/asignaturas/obtenerAsig.obtenerAsig",
        "events": [
          {
            "httpApi": {
              "path": "/asignatura/{id}",
              "method": "get"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/asignatura/{id}"
          }
        ],
        "name": "apiproductos-dev-obtenerAsignatura",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "ObtenerAsignaturaLambdaVersionaQ2ZVTEx3qCwj21B1eTzFuSxcrV3Ze1USwGAjjl4lw"
      },
      "eliminarAsignatura": {
        "handler": "src/asignaturas/eliminarAsig.eliminarAsig",
        "events": [
          {
            "httpApi": {
              "path": "/asignatura/{id}",
              "method": "delete"
            },
            "resolvedMethod": "DELETE",
            "resolvedPath": "/asignatura/{id}"
          }
        ],
        "name": "apiproductos-dev-eliminarAsignatura",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "EliminarAsignaturaLambdaVersionqLBWdxBSRW5avDiRALDExW01vL5dOa2YNBlQiNZAc"
      },
      "obtenerAsignaturasPorDocente": {
        "handler": "src/asignaturas/obtenerPorDocente.obtenerAsignaturasPorDocente",
        "events": [
          {
            "httpApi": {
              "path": "/asignaturas/docente/{docenteId}",
              "method": "get"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/asignaturas/docente/{docenteId}"
          }
        ],
        "name": "apiproductos-dev-obtenerAsignaturasPorDocente",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "ObtenerAsignaturasPorDocenteLambdaVersionkOq01rIu75P5hJmSoHjmzhqzjk86h9bqQXxlZEg8BA"
      },
      "obtenerAsignaturasPorEstudiante": {
        "handler": "src/asignaturas/obtenerAsignaturasPorEstudiante.obtenerAsignaturasPorEstudiante",
        "events": [
          {
            "httpApi": {
              "path": "/asignaturas/estudiante/{id}",
              "method": "get"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/asignaturas/estudiante/{id}"
          }
        ],
        "name": "apiproductos-dev-obtenerAsignaturasPorEstudiante",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "ObtenerAsignaturasPorEstudianteLambdaVersion6dbS4wAvLTKrYdN1eIbI0DUU4WMkVGsuzwBAtphqJg"
      },
      "actualizarAsignatura": {
        "handler": "src/asignaturas/actualizarAsig.actualizarAsig",
        "events": [
          {
            "httpApi": {
              "path": "/asignatura/{id}",
              "method": "put"
            },
            "resolvedMethod": "PUT",
            "resolvedPath": "/asignatura/{id}"
          }
        ],
        "name": "apiproductos-dev-actualizarAsignatura",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "ActualizarAsignaturaLambdaVersionY1ojd65vnPnBB2SGlUHeSmndQORu1KgAuBYzq3U1II"
      },
      "obtenerTodasAsignaturas": {
        "handler": "src/asignaturas/obtenerTodasAsignaturas.obtenerTodasAsignaturas",
        "events": [
          {
            "httpApi": {
              "path": "/asignaturas",
              "method": "get"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/asignaturas"
          }
        ],
        "name": "apiproductos-dev-obtenerTodasAsignaturas",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "ObtenerTodasAsignaturasLambdaVersionr7H32fxbVrMZr3YazCVuCvdOgpdAZrSkoIbFLXEMfeg"
      },
      "agregarParcial": {
        "handler": "src/parciales/agregarPar.agregarPar",
        "events": [
          {
            "httpApi": {
              "path": "/parciales",
              "method": "post"
            },
            "resolvedMethod": "POST",
            "resolvedPath": "/parciales"
          }
        ],
        "name": "apiproductos-dev-agregarParcial",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "AgregarParcialLambdaVersionMckD7rXB1oV6cgWeEVdiQ1WZUhrFCifE3UTAp50fns"
      },
      "obtenerTodosParciales": {
        "handler": "src/parciales/obtenerTodosParciales.obtenerTodosParciales",
        "events": [
          {
            "httpApi": {
              "path": "/parciales",
              "method": "get"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/parciales"
          }
        ],
        "name": "apiproductos-dev-obtenerTodosParciales",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "ObtenerTodosParcialesLambdaVersionC6mKyhZJbeTDwF3gxuha8M63ehuP34Rrtl2irr8vU"
      },
      "eliminarParcial": {
        "handler": "src/parciales/eliminarPar.eliminarPar",
        "events": [
          {
            "httpApi": {
              "path": "/parciales/{id}",
              "method": "delete"
            },
            "resolvedMethod": "DELETE",
            "resolvedPath": "/parciales/{id}"
          }
        ],
        "name": "apiproductos-dev-eliminarParcial",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "EliminarParcialLambdaVersionuMi6ub34VZWsOgFpJ2kGlT7Ic1aOm8F3juExHx2xSA"
      },
      "actualizarParcial": {
        "handler": "src/parciales/actualizarPar.actualizarPar",
        "events": [
          {
            "httpApi": {
              "path": "/parciales/{id}",
              "method": "put"
            },
            "resolvedMethod": "PUT",
            "resolvedPath": "/parciales/{id}"
          }
        ],
        "name": "apiproductos-dev-actualizarParcial",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "ActualizarParcialLambdaVersiondjv7LzWFLPi4ineSU0GrfbkaN23zaXnAXvm4aZkzqQ"
      },
      "agregarPractica": {
        "handler": "src/practicas/agregarPract.agregarPract",
        "events": [
          {
            "httpApi": {
              "path": "/practicas",
              "method": "post"
            },
            "resolvedMethod": "POST",
            "resolvedPath": "/practicas"
          }
        ],
        "name": "apiproductos-dev-agregarPractica",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "AgregarPracticaLambdaVersion3q0XoezcgBP5iPYPtIKEmrEcWt5C750wgn2jZnh5h6U"
      },
      "obtenerPracticas": {
        "handler": "src/practicas/obtenerPract.obtenerPract",
        "events": [
          {
            "httpApi": {
              "path": "/practicas",
              "method": "get"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/practicas"
          }
        ],
        "name": "apiproductos-dev-obtenerPracticas",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "ObtenerPracticasLambdaVersionKfWPvud8kpOTbTwMUH16bMyrJkuXhpC3HkdMxF3rM"
      },
      "eliminarPractica": {
        "handler": "src/practicas/eliminarPract.eliminarPract",
        "events": [
          {
            "httpApi": {
              "path": "/practicas/{id}",
              "method": "delete"
            },
            "resolvedMethod": "DELETE",
            "resolvedPath": "/practicas/{id}"
          }
        ],
        "name": "apiproductos-dev-eliminarPractica",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "EliminarPracticaLambdaVersion2srWBIMvu0ZFODo5LKVSURWgkZNqG7LxgsE6jqnPc"
      },
      "actualizarPractica": {
        "handler": "src/practicas/actualizarPract.actualizarPract",
        "events": [
          {
            "httpApi": {
              "path": "/practicas/{id}",
              "method": "put"
            },
            "resolvedMethod": "PUT",
            "resolvedPath": "/practicas/{id}"
          }
        ],
        "name": "apiproductos-dev-actualizarPractica",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "ActualizarPracticaLambdaVersionxl8QIWx7awFKX6wQ0tUPkT68bv7vcEC2FtbjzxY1p8"
      },
      "obtenerPracticasPorDocente": {
        "handler": "src/practicas/obtenerPracticasPorDocente.obtenerPracticasPorDocente",
        "events": [
          {
            "httpApi": {
              "path": "/practicas/docente/{docenteId}",
              "method": "get"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/practicas/docente/{docenteId}"
          }
        ],
        "name": "apiproductos-dev-obtenerPracticasPorDocente",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "ObtenerPracticasPorDocenteLambdaVersionZus9M9gM5D4bJ0yGeUgRBRqlgFSkXn0l9VUeZg9Oeo"
      },
      "agregarUsoEquipo": {
        "handler": "src/usoEquipo/agregarEquip.agregarEquip",
        "events": [
          {
            "httpApi": {
              "path": "/usoEquipo",
              "method": "post"
            },
            "resolvedMethod": "POST",
            "resolvedPath": "/usoEquipo"
          }
        ],
        "name": "apiproductos-dev-agregarUsoEquipo",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "AgregarUsoEquipoLambdaVersiongRAkqJebpVHFVoe8aDN4GmhtinHYiJr8ysyi1QtkjP0"
      },
      "obtenerUsoEquipo": {
        "handler": "src/usoEquipo/obtenerEquip.obtenerEquip",
        "events": [
          {
            "httpApi": {
              "path": "/usoEquipo/{id}",
              "method": "get"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/usoEquipo/{id}"
          }
        ],
        "name": "apiproductos-dev-obtenerUsoEquipo",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "ObtenerUsoEquipoLambdaVersionZpl3mVsSOmYw6mMQA41XZUW2MdxTGBmOAtUYiRGksA"
      },
      "eliminarUsoEquipo": {
        "handler": "src/usoEquipo/eliminarEquip.eliminarEquip",
        "events": [
          {
            "httpApi": {
              "path": "/usoEquipo/{id}",
              "method": "delete"
            },
            "resolvedMethod": "DELETE",
            "resolvedPath": "/usoEquipo/{id}"
          }
        ],
        "name": "apiproductos-dev-eliminarUsoEquipo",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "EliminarUsoEquipoLambdaVersionVOYxQ6gZXmdyB1i36CmbZA1LgtRkW6kvpm0vpiBkHmg"
      },
      "actualizarUsoEquipo": {
        "handler": "src/usoEquipo/actualizarEquip.actualizarEquip",
        "events": [
          {
            "httpApi": {
              "path": "/usoEquipo/{id}",
              "method": "put"
            },
            "resolvedMethod": "PUT",
            "resolvedPath": "/usoEquipo/{id}"
          }
        ],
        "name": "apiproductos-dev-actualizarUsoEquipo",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "ActualizarUsoEquipoLambdaVersiontU5M0E3MnBXJuX0UYXUXve2dGVzJ7tFSeorQnRS4dVk"
      }
    },
    "resources": {
      "Resources": {
        "UsuarioTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "usuario",
            "AttributeDefinitions": [
              {
                "AttributeName": "id",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "id",
                "KeyType": "HASH"
              }
            ],
            "BillingMode": "PAY_PER_REQUEST"
          }
        },
        "LaboratoriosTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "laboratorios",
            "AttributeDefinitions": [
              {
                "AttributeName": "id",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "id",
                "KeyType": "HASH"
              }
            ],
            "BillingMode": "PAY_PER_REQUEST"
          }
        },
        "AsignaturasTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "asignaturas",
            "AttributeDefinitions": [
              {
                "AttributeName": "id",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "id",
                "KeyType": "HASH"
              }
            ],
            "BillingMode": "PAY_PER_REQUEST"
          }
        },
        "ParcialesTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "parciales",
            "AttributeDefinitions": [
              {
                "AttributeName": "id",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "id",
                "KeyType": "HASH"
              }
            ],
            "BillingMode": "PAY_PER_REQUEST"
          }
        },
        "PracticasTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "practicas",
            "AttributeDefinitions": [
              {
                "AttributeName": "id",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "id",
                "KeyType": "HASH"
              }
            ],
            "BillingMode": "PAY_PER_REQUEST"
          }
        },
        "UsoEquipoTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "usoEquipo",
            "AttributeDefinitions": [
              {
                "AttributeName": "id",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "id",
                "KeyType": "HASH"
              }
            ],
            "BillingMode": "PAY_PER_REQUEST"
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless",
    "initialServerlessConfig": {
      "org": "kevin1",
      "service": "apiproductos",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      }
    },
    "appId": null,
    "org": "kevin1",
    "orgId": null,
    "layers": {},
    "artifact": "D:\\SEPTIMO_SEMESTRE\\APLICACIONES DISTRIBUIDAS\\Unidad2\\Grupal\\Tarea3_C\\.serverless\\apiproductos.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/apiproductos/dev/1751152684187-2025-06-28T23:18:04.187Z",
    "artifact": "apiproductos.zip"
  }
}